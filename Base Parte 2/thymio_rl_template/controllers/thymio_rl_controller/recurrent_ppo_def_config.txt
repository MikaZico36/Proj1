{'policy': OrderedDict([('log_std', tensor([0., 0.])), ('mlp_extractor.policy_net.0.weight', tensor([[-0.0245,  0.3073,  0.0424,  ..., -0.0090,  0.1963, -0.0997],
        [ 0.0318, -0.0271, -0.0569,  ...,  0.1193,  0.0326,  0.0860],
        [ 0.0951, -0.0080,  0.0189,  ...,  0.0256,  0.0360, -0.0991],
        ...,
        [ 0.0134, -0.0305,  0.0040,  ..., -0.0616,  0.1113, -0.0276],
        [ 0.0484, -0.0545, -0.0019,  ...,  0.0057,  0.2910,  0.1416],
        [-0.0903,  0.1033,  0.0851,  ..., -0.2404,  0.0093,  0.0727]])), ('mlp_extractor.policy_net.0.bias', tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])), ('mlp_extractor.policy_net.2.weight', tensor([[-0.2581,  0.0326, -0.2638,  ...,  0.0459,  0.0899,  0.3248],
        [ 0.0907,  0.0996, -0.1252,  ..., -0.1287, -0.1835,  0.0375],
        [-0.1986, -0.0641,  0.1103,  ..., -0.0740,  0.2282, -0.1422],
        ...,
        [ 0.1471, -0.2311, -0.1339,  ..., -0.1126, -0.2706, -0.0435],
        [ 0.1492, -0.1258, -0.0157,  ...,  0.1362, -0.1289,  0.2258],
        [-0.1861, -0.0281, -0.1924,  ..., -0.1608, -0.2701,  0.0171]])), ('mlp_extractor.policy_net.2.bias', tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])), ('mlp_extractor.value_net.0.weight', tensor([[ 0.0121,  0.0992, -0.1213,  ...,  0.0171,  0.0968, -0.0990],
        [ 0.1553,  0.0070,  0.0348,  ..., -0.0265,  0.0628, -0.0405],
        [ 0.1876,  0.0122,  0.1037,  ...,  0.1184, -0.0372, -0.0751],
        ...,
        [ 0.0900,  0.0426,  0.0448,  ..., -0.0621, -0.0206,  0.1245],
        [-0.0029,  0.2233,  0.0337,  ...,  0.0220, -0.0065, -0.0515],
        [-0.0858,  0.1901,  0.0479,  ..., -0.0587, -0.0133,  0.0512]])), ('mlp_extractor.value_net.0.bias', tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])), ('mlp_extractor.value_net.2.weight', tensor([[-0.1974,  0.1314,  0.3011,  ..., -0.1644, -0.0500,  0.0851],
        [-0.1964,  0.2365, -0.3085,  ...,  0.1464, -0.1935, -0.0497],
        [ 0.1431,  0.1041,  0.0492,  ...,  0.0118, -0.2207,  0.1220],
        ...,
        [ 0.0196, -0.2659,  0.2026,  ...,  0.0282, -0.3077, -0.1587],
        [-0.1740,  0.1389, -0.0706,  ..., -0.1041,  0.1146, -0.3619],
        [-0.1320,  0.0297,  0.2116,  ...,  0.0817, -0.0594,  0.3601]])), ('mlp_extractor.value_net.2.bias', tensor([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.])), ('action_net.weight', tensor([[-1.3499e-03, -2.3321e-03, -1.6058e-03,  7.3089e-04, -2.5680e-04,
          1.7405e-03,  2.3354e-03,  3.4187e-04,  7.1274e-04,  1.9078e-03,
         -3.6109e-04, -2.6978e-03, -6.0189e-04,  2.3960e-04,  1.3293e-03,
         -1.2566e-03,  7.3150e-04,  1.2561e-03,  1.5245e-03,  1.5402e-03,
          1.2364e-03, -1.4344e-03,  8.5939e-04,  9.5529e-04,  5.0922e-04,
         -1.7664e-03, -6.5307e-04,  1.6454e-03, -3.9440e-05, -2.3755e-03,
         -1.3032e-03, -2.4633e-03, -3.6514e-04,  4.0780e-05, -6.1263e-04,
         -4.5458e-06,  1.9083e-03, -1.7703e-03, -4.4837e-04, -1.4017e-03,
          9.1710e-05, -1.7113e-04, -2.1597e-03, -9.2636e-04,  2.0658e-03,
         -3.9419e-04,  4.6520e-04, -5.3982e-04, -1.4738e-03, -1.4749e-03,
          7.1554e-05,  5.2706e-04, -8.7759e-04,  1.9264e-04, -4.2055e-04,
          2.1507e-03, -3.6353e-04,  7.6229e-04, -6.2521e-04, -1.7036e-04,
          7.5303e-04,  1.2714e-03,  3.0805e-04, -2.6861e-04],
        [-1.2794e-03, -1.2182e-03,  2.4151e-04,  1.0061e-03, -9.6832e-04,
          9.0544e-04,  1.4968e-03, -6.8925e-04, -1.5747e-03, -1.1014e-03,
          2.0119e-03, -9.9670e-05,  7.3900e-04,  1.1469e-03,  1.3438e-04,
         -1.5304e-03, -4.4521e-05,  1.7349e-03, -4.4296e-04, -2.8337e-03,
          3.3964e-04, -3.8929e-04,  6.1648e-04,  6.5011e-04, -9.6272e-04,
          1.3800e-03, -1.0261e-03, -8.8630e-04, -1.8720e-04,  9.8245e-04,
          1.3014e-03, -1.4966e-03,  8.4318e-04, -2.0029e-03,  1.3434e-03,
          1.0500e-03, -2.1603e-04,  8.4664e-04,  7.3508e-04, -3.0425e-03,
         -6.4838e-04,  3.7678e-04, -6.0843e-04, -1.1913e-03, -1.7640e-03,
         -2.5139e-05, -6.3424e-04, -2.0369e-03,  6.8153e-04,  2.9189e-04,
         -1.9396e-03, -6.8120e-04, -3.4016e-05,  3.0331e-03, -1.6489e-03,
         -8.1808e-04,  1.5726e-03,  8.6258e-05, -8.4819e-04,  1.3845e-04,
         -1.4726e-04, -1.4720e-03, -7.5366e-05, -2.5434e-03]])), ('action_net.bias', tensor([0., 0.])), ('value_net.weight', tensor([[ 0.0341,  0.1373,  0.0255, -0.0582, -0.1432, -0.1225,  0.2144, -0.1809,
          0.1363,  0.0391, -0.1599, -0.1690,  0.1711,  0.1592, -0.0487,  0.0274,
          0.0355,  0.0708, -0.1526,  0.0974, -0.1992, -0.0936,  0.0573, -0.0176,
          0.0764,  0.0278, -0.1848,  0.2217,  0.0468, -0.1875,  0.0568, -0.2092,
         -0.1116,  0.0725,  0.1379,  0.0583, -0.2614, -0.0671, -0.0855,  0.1951,
         -0.0129, -0.1037,  0.0296, -0.0546, -0.1066,  0.2315,  0.0717, -0.0888,
          0.1008, -0.0296, -0.1726, -0.1309, -0.0797,  0.2534, -0.0265,  0.0328,
          0.1326, -0.0339, -0.0475, -0.0500,  0.0465,  0.0335,  0.1791,  0.1554]])), ('value_net.bias', tensor([0.])), ('lstm_actor.weight_ih_l0', tensor([[-0.0546, -0.0188,  0.0145,  ...,  0.0009, -0.0226, -0.0136],
        [-0.0181, -0.0554,  0.0469,  ...,  0.0516, -0.0273, -0.0601],
        [ 0.0418, -0.0260, -0.0104,  ...,  0.0614, -0.0172, -0.0100],
        ...,
        [ 0.0446,  0.0215,  0.0455,  ...,  0.0524,  0.0106, -0.0481],
        [-0.0040,  0.0027,  0.0254,  ..., -0.0062,  0.0085,  0.0247],
        [-0.0334, -0.0287, -0.0463,  ...,  0.0327,  0.0611,  0.0028]])), ('lstm_actor.weight_hh_l0', tensor([[-0.0519,  0.0105,  0.0319,  ...,  0.0171,  0.0457, -0.0121],
        [-0.0150,  0.0440, -0.0349,  ...,  0.0353,  0.0210, -0.0449],
        [ 0.0495,  0.0076,  0.0621,  ...,  0.0326, -0.0276, -0.0371],
        ...,
        [ 0.0132,  0.0099, -0.0224,  ..., -0.0127, -0.0357,  0.0336],
        [-0.0622, -0.0312,  0.0211,  ..., -0.0129,  0.0330, -0.0467],
        [-0.0497,  0.0350,  0.0088,  ..., -0.0008,  0.0048,  0.0588]])), ('lstm_actor.bias_ih_l0', tensor([-0.0543, -0.0608, -0.0349,  ..., -0.0006, -0.0578, -0.0123])), ('lstm_actor.bias_hh_l0', tensor([ 0.0575,  0.0225,  0.0269,  ..., -0.0399, -0.0585,  0.0043])), ('lstm_critic.weight_ih_l0', tensor([[ 0.0303, -0.0043, -0.0530,  ..., -0.0091,  0.0390, -0.0520],
        [-0.0499, -0.0126,  0.0598,  ...,  0.0360, -0.0250, -0.0417],
        [ 0.0521,  0.0384,  0.0053,  ..., -0.0287,  0.0308, -0.0407],
        ...,
        [ 0.0166, -0.0060,  0.0049,  ..., -0.0544, -0.0146,  0.0222],
        [ 0.0498, -0.0014, -0.0106,  ...,  0.0305, -0.0171,  0.0084],
        [ 0.0091,  0.0154, -0.0217,  ...,  0.0264, -0.0491, -0.0109]])), ('lstm_critic.weight_hh_l0', tensor([[ 0.0077, -0.0170, -0.0108,  ...,  0.0295, -0.0478,  0.0036],
        [-0.0508,  0.0509,  0.0372,  ...,  0.0059, -0.0203,  0.0295],
        [ 0.0303,  0.0296,  0.0505,  ..., -0.0008,  0.0165,  0.0163],
        ...,
        [-0.0114,  0.0109, -0.0623,  ...,  0.0427,  0.0404,  0.0121],
        [ 0.0572, -0.0436, -0.0321,  ...,  0.0212,  0.0234,  0.0513],
        [-0.0373, -0.0332,  0.0487,  ...,  0.0318, -0.0387,  0.0163]])), ('lstm_critic.bias_ih_l0', tensor([-0.0524,  0.0465,  0.0581,  ..., -0.0023, -0.0574, -0.0572])), ('lstm_critic.bias_hh_l0', tensor([0.0418, 0.0312, 0.0242,  ..., 0.0508, 0.0169, 0.0255]))]), 'policy.optimizer': {'state': {}, 'param_groups': [{'lr': 0.0001, 'betas': (0.9, 0.999), 'eps': 1e-05, 'weight_decay': 0, 'amsgrad': False, 'maximize': False, 'foreach': None, 'capturable': False, 'differentiable': False, 'fused': None, 'decoupled_weight_decay': False, 'params': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]}]}}